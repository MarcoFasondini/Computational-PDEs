
# Julia

To run Julia in a Jupyter notebook on your own machine:

1. Download [Julia v1.8.4](https://julialang.org/downloads/)
2. Open the Julia app which will launch a new window
3. Install the required packages by typing (`]` will change the prompt to a package manager):
```julia
] add IJulia ApproxFun LinearAlgebra Plots SparseArrays ToeplitzMatrices
```


![Julia.png](attachment:Julia.png)

Notice that if you type backspace, you will exit the package manager (i.e., instead of seeing 'pkg' on the left, you'll see 'julia', like this 

![Julia_step3.png](attachment:Julia_step3.png)

4. Build Jupyter by typing
```julia
] bulid IJulia
```

![Julia_step2.png](attachment:Julia_step2.png)

5. Exit the package manager by typing backspace then and launch Jupyter by typing
```julia
using IJulia
notebook()
```

![julia_step4.png](attachment:julia_step4.png)

The first time you run `notebook()`, it will prompt you for whether it should install Jupyter. Hit enter to have it use the Conda.jl package to install a minimal Python+Jupyter distribution (via Miniconda) that is private to Julia (not in your `PATH`).

6. In the top right of the tab that has been opened in your browser, click on New then click on your version of Julia, e.g., Julia 1.8.4

![julia_step5.png](attachment:julia_step5.png)

In the first cell of your Jupyter notebook, type the following:

![julia_step6.png](attachment:julia_step6.png)

To run this cell, press Ctrl+Enter

Now type the following in a new cell, run the cell and check that you get the same figure as output:

![julia_step7.png](attachment:julia_step7.png)

Now download the Jupyter notebook titled ??? at ??? and run it and see that you get the same output as in the lecture  notes on Blackboard....   

I assume everybody here is comfortable with either Matlab or Python. It will then take you no time to pick up (basic) Julia as well. A lot of resources can be found at [https://julialang.org/learning/](https://julialang.org/learning/). I particularly recommend

* [Introduction to Julia](https://juliaacademy.com/p/intro-to-julia). If you don't like videos very much then jump straight to the [notebooks](https://github.com/JuliaAcademy/JuliaTutorials/tree/master/introductory-tutorials/intro-to-julia).
* A more rapid introduction suitable for experience programmers can be found [here](https://learnxinyminutes.com/docs/julia/)


## Some Admin 

### Jupyter Notebooks

This course will be taught via [Jupyter notebooks](https://jupyter.org). These notebooks provide a nice environment mixing web technologies, mathematical text (latex) and code. I will use Julia for this course (The "Ju" in Jupyter) but these notebooks can in principle also used with Python ("Py"), R, and other languages:  [docs](https://jupyter4edu.github.io/jupyter-edu-book/jupyter.html#language-support-kernels)"The Jupyter system supports over 100 programming languages (called "kernels" in the Jupyter ecosystem) including Python, Java, R, Julia, Matlab, Octave, Scheme, Processing, Scala, and many more. "

* For today's lecture just follow along; I will say a little more about Jupyter, Julia and our eco-system in the next lecture.
* You can try to access the Jupyter hub or install Julia/Jupyter/IJulia by yourself until then, following the [`WS01` notebook](WS01-Installing-Julia.ipynb) which can be accessed through the course github website.


RISE
Weave


```julia
```
